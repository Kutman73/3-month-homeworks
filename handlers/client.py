from aiogram import types, Dispatcherfrom aiogram.types import InlineKeyboardButton, InlineKeyboardMarkupfrom my_bots.bot2.venv.config import botfrom my_bots.bot2.keyboard.client_kb import start_marcupfrom my_bots.bot2.parser.news import parserasync def start_handler(message: types.Message):    await bot.send_message(                            message.from_user.id,                            f"Hello {message.from_user.first_name}",                            reply_markup=start_marcup                            )async def process_photo_command(message: types.Message):    photo = open("media/mems/meme_001.jpg", 'rb')    await bot.send_photo(message.from_user.id, photo=photo)async def quiz_1(message: types.Message):    markup1 = InlineKeyboardMarkup()    button_call_1 = InlineKeyboardButton('NEXT', callback_data='button_call_1')    markup1.add(button_call_1)    question = 'Что выведет этот код?'    answers = [        '<class str>',        '<class int>',        '<class float>',        '0.99',        'Error',        '99'    ]    test1 = open('media/py_tests/photo_2022-10-20_22-35-59.jpg', 'rb')    await bot.send_photo(message.from_user.id, photo=test1)    await bot.send_poll(        chat_id=message.from_user.id,        question=question,        options=answers,        is_anonymous=False,        type='quiz',        correct_option_id=2,        reply_markup=markup1    )async def parser_news(message: types.Message):    items = parser()    for item in items:        await message.answer(            f"{item['data']}\n\n"            f"{item['headline']}\n"            f"{item['link']}\n"        )def register_handlers_client(dp: Dispatcher):    dp.register_message_handler(start_handler, commands=['start'])    dp.register_message_handler(process_photo_command, commands=['mem'])    dp.register_message_handler(quiz_1, commands=['quiz'])    dp.register_message_handler(parser_news, commands=['news'])